hovers:
  (1,3):
    - Top level element describing a HTTP API
  (1,11):
    - Top level element describing a HTTP API
  (2,2):
    - Contains general information about the defined API, such as title and version
  (2,5):
    - Contains general information about the defined API, such as title and version
  (3,4):
    - Human readable name for the object
  (3,18):
    - Human readable name for the object
  (4,7):
    - Human readable description of an element
  (4,35):
    - Human readable description of an element
  (5,9):
    - Terms and conditions when using the API
  (5,30):
    - Terms and conditions when using the API
  (6,5):
    - Organization providing an good or service
  (6,10):
    - Organization providing an good or service
  (7,6):
    - Human readable name for the object
  (7,15):
    - Human readable name for the object
  (8,5):
    - URL identifying the organization
  (8,23):
    - URL identifying the organization
  (9,6):
    - Contact email for the organization
  (9,20):
    - Contact email for the organization
  (10,5):
    - Licensing information for a resource
  (10,10):
    - Licensing information for a resource
  (11,6):
    - Human readable name for the object
  (11,15):
    - Human readable name for the object
  (12,5):
    - URL identifying the organization
  (12,32):
    - URL identifying the organization
  (13,5):
    - Version of the API
  (13,13):
    - Version of the API
  (14,2):
    - The domain name or IPv4 of the server that hosts the API
  (14,13):
    - The domain name or IPv4 of the server that hosts the API
  (15,4):
    - URL prefix to all API endpoints
  (15,13):
    - URL prefix to all API endpoints
  (16,3):
    - URI scheme for the API protocol
  (16,8):
    - URI scheme for the API protocol
  (17,6):
    - URI scheme for the API protocol
  (18,6):
    - URI scheme for the API protocol
  (19,4):
    - Media-types accepted in a API request
  (19,9):
    - Media-types accepted in a API request
  (20,12):
    - Media-types accepted in a API request
  (21,4):
    - Media types returned by a API response
  (21,9):
    - Media types returned by a API response
  (22,12):
    - Media types returned by a API response
  (23,2):
    - EndPoint in the API holding a number of executable operations
  (23,6):
    - EndPoint in the API holding a number of executable operations
  (24,6):
    - EndPoint in the API holding a number of executable operations
  (24,11):
    - EndPoint in the API holding a number of executable operations
  (25,6):
    - EndPoint in the API holding a number of executable operations
  (25,17):
    - EndPoint in the API holding a number of executable operations
  (26,4):
    - EndPoint in the API holding a number of executable operations
  (26,8):
    - EndPoint in the API holding a number of executable operations
  (27,5):
    - Action that can be executed using a particular HTTP invocation
  (27,8):
    - Request information for an operation
  (28,8):
    - Request information for an operation
  (28,11):
    - Request information for an operation
  (29,12):
    - Categorical information provided by some API spec format. Tags are extensions to the model supported directly in the input API spec format.
  (30,11):
    - Human readable description of an element
  (30,31):
    - Human readable description of an element
  (31,9):
    - Human readable description of the operation
  (31,22):
    - Human readable description of the operation
  (32,11):
    - Identifier of the target operation
  (32,24):
    - Identifier of the target operation
  (33,12):
    - Documentation for a particular part of the model
  (33,19):
    - The most generic kind of creative work, including books, movies, photographs, software programs, etc.
  (34,9):
    - URL for the creative work
  (34,24):
    - URL for the creative work
  (35,13):
    - Human readable description of an element
  (35,27):
    - Human readable description of an element
  (36,10):
    - Media-types accepted in a API request
  (36,15):
    - Media-types accepted in a API request
  (37,18):
    - Media-types accepted in a API request
  (38,10):
    - Media types returned by a API response
  (38,15):
    - Media types returned by a API response
  (39,18):
    - Media types returned by a API response
  (40,14):
    - Media types returned by a API response
  (41,11):
    - Payload for a Request/Response
  (41,17):
    - Payload for a Request/Response
  (42,12):
    - Payload for a Request/Response
  (42,28):
    - Payload for a Request/Response
  (43,12):
    - Human readable name for the object
  (43,19):
    - Human readable name for the object
  (44,11):
    - Parameters associated to the communication model
  (44,16):
    - Parameters associated to the communication model
  (45,15):
    - Human readable description of an element
  (45,27):
    - Human readable description of an element
  (46,14):
    - Marks the payload as required
  (46,22):
    - Marks the payload as required
  (47,13):
    - Parameters associated to the communication model
  (47,17):
    - Parameters associated to the communication model
  (48,14):
    - Parameters associated to the communication model
  (48,21):
    - Parameters associated to the communication model
  (49,9):
    - URI scheme for the API protocol
  (49,14):
    - URI scheme for the API protocol
  (50,18):
    - URI scheme for the API protocol
  (51,18):
    - URI scheme for the API protocol
  (52,11):
    - Marks the operation as deprecated
  (52,20):
    - Marks the operation as deprecated
  (53,10):
    - Request information for an operation
  (53,15):
    - Request information for an operation
  (54,16):
    - Settings for an OAuth2 security scheme
  (54,24):
    - Settings for an OAuth2 security scheme
  (55,19): []
  (56,18): []
  (57,10):
    - Request information for an operation
  (57,16):
    - Response information for an operation
  (58,10):
    - Human readable name for the object
  (58,14):
    - Response information for an operation
  (59,15):
    - Human readable description of an element
  (59,29):
    - Human readable description of an element
  (60,13):
    - Defines a data type
  (60,17):
    - Defines a data type
  (61,14):
    - Defines a data type
  (61,20):
    - Defines a data type
  (62,14):
    - Determines how items of arrays are validated
  (62,18):
    - Determines how items of arrays are validated
  (63,16):
    - Defines a data type
  (63,29):
    - Defines a data type
  (64,11):
    - Human readable name for the object
  (64,16):
    - Response information for an operation
  (65,15):
    - Human readable description of an element
  (65,29):
    - Human readable description of an element
  (66,13):
    - Schema associated to this payload
  (66,17):
    - Schema associated to this payload
  (67,14):
    - Defines a data type
  (67,31):
    - Defines a data type
  (68,5):
    - Action that can be executed using a particular HTTP invocation
  (68,8):
    - Action that can be executed using a particular HTTP invocation
  (69,11):
    - Human readable description of an element
  (69,20):
    - Human readable description of an element
  (70,6):
    - Action that can be executed using a particular HTTP invocation
  (70,9):
    - Action that can be executed using a particular HTTP invocation
  (71,11):
    - Human readable description of an element
  (71,21):
    - Human readable description of an element
  (72,7):
    - Action that can be executed using a particular HTTP invocation
  (72,11):
    - Action that can be executed using a particular HTTP invocation
  (73,11):
    - Human readable description of an element
  (73,22):
    - Human readable description of an element
  (74,7):
    - Action that can be executed using a particular HTTP invocation
  (74,12):
    - Action that can be executed using a particular HTTP invocation
  (75,11):
    - Human readable description of an element
  (75,22):
    - Human readable description of an element
  (76,6):
    - Action that can be executed using a particular HTTP invocation
  (76,9):
    - Action that can be executed using a particular HTTP invocation
  (77,11):
    - Human readable description of an element
  (77,21):
    - Human readable description of an element
  (78,6):
    - Action that can be executed using a particular HTTP invocation
  (78,10):
    - Action that can be executed using a particular HTTP invocation
  (79,11):
    - Human readable description of an element
  (79,21):
    - Human readable description of an element
  (80,9):
    - Piece of data required or returned by an Operation
  (80,15):
    - Piece of data required or returned by an Operation
  (81,10):
    - Name of a parameter
  (81,15):
    - Name of a parameter
  (82,9):
    - Part of the Request model where the parameter can be encoded (header, path, query param, etc.)
  (82,14):
    - Part of the Request model where the parameter can be encoded (header, path, query param, etc.)
  (83,13):
    - Human readable description of an element
  (83,29):
    - Human readable description of an element
  (84,12):
    - Marks the parameter as required
  (84,20):
    - Marks the parameter as required
  (85,10):
    - Defines a data type
  (85,16):
    - Defines a data type
  (86,10):
    - Defines a data type
  (86,14):
    - Defines a data type
  (87,12):
    - Scalar range constraining this scalar shape
  (87,19):
    - Scalar range constraining this scalar shape
  (88,16):
    - Input collection format information
  (88,27):
    - Input collection format information
  (89,10):
    - Piece of data required or returned by an Operation
  (89,13):
    - Piece of data required or returned by an Operation
  (90,2):
    - Additionally custom tagged information
  (90,5):
    - Additionally custom tagged information
  (91,6):
    - Human readable name for the object
  (91,12):
    - Human readable name for the object
  (92,9):
    - Human readable description of an element
  (92,22):
    - Human readable description of an element
  (93,10):
    - Documentation about the tag
  (93,17):
    - The most generic kind of creative work, including books, movies, photographs, software programs, etc.
  (94,11):
    - Human readable description of an element
  (94,28):
    - Human readable description of an element
  (95,7):
    - URL for the creative work
  (95,20):
    - URL for the creative work
  (96,6):
    - Human readable name for the object
  (96,12):
    - Human readable name for the object
  (97,9):
    - Human readable description of an element
  (97,22):
    - Human readable description of an element
  (99,6):
    - Top level element describing a HTTP API
  (99,13):
    - The most generic kind of creative work, including books, movies, photographs, software programs, etc.
  (100,7):
    - Human readable description of an element
  (100,24):
    - Human readable description of an element
  (101,3):
    - URL for the creative work
  (101,16):
    - URL for the creative work
  (102,4):
    - Textual indication of the kind of security scheme used
  (102,9):
    - Textual indication of the kind of security scheme used
  (103,7): []
  (103,17): []
  (103,25): []
  (105,5):
    - Contains declarations of reusable Schemas
  (105,12):
    - Top level element describing a HTTP API
  (106,5):
    - Human readable name for the object
  (106,9):
    - Top level element describing a HTTP API
  (107,6):
    - Defines a data type
  (107,22):
    - Defines a data type
  (108,6):
    - Human readable name for the object
  (108,12):
    - Defines a data type
  (109,6):
    - Scalar range constraining this scalar shape
  (109,13):
    - Scalar range constraining this scalar shape
  (110,7):
    - Defines semantic validation for a fixed subset of values
  (110,14):
    - Defines semantic validation for a fixed subset of values
  (111,5):
    - Human readable name for the object
  (111,9):
    - Defines a data type
  (112,6):
    - Defines a data type
  (112,14):
    - Defines a data type
  (113,9):
    - Human readable description of an element
  (113,23):
    - Human readable description of an element
  (114,7):
    - Default value for this element
  (114,13):
    - Defines a data type
  (115,9):
    - Defines a data type
  (115,16):
    - Defines a data type
  (116,7):
    - Defines a data type
  (116,14):
    - Defines a data type
  (117,12):
    - Defines a data type
  (117,24):
    - Defines a data type
  (118,12):
    - Defines a data type
  (118,24):
    - Defines a data type
  (119,8):
    - Maximum length constraint
  (119,16):
    - Maximum length constraint
  (120,8):
    - Minimum lenght constraint
  (120,15):
    - Minimum lenght constraint
  (121,7):
    - Pattern constraint
  (121,32):
    - Pattern constraint
  (122,6):
    - Each element should be part of the provided list to be valid
  (122,9):
    - Each element should be part of the provided list to be valid
  (123,8):
    - Defines a data type
  (124,8):
    - Defines a data type
  (125,8):
    - Defines a data type
  (126,8):
    - Defines a data type
  (127,6):
    - Scalar range constraining this scalar shape
  (127,13):
    - Scalar range constraining this scalar shape
  (128,6):
    - Logical and composition of data shapes
  (128,10):
    - Logical and composition of data shapes
  (129,7):
    - Defines a data type
  (130,10):
    - Documentation for a particular part of the model
  (130,17):
    - The most generic kind of creative work, including books, movies, photographs, software programs, etc.
  (131,11):
    - Human readable description of an element
  (131,28):
    - Human readable description of an element
  (132,7):
    - URL for the creative work
  (132,20):
    - URL for the creative work
  (133,7):
    - Example value for a schema inside an API
  (133,13):
    - Example value for a schema inside an API
  (134,6):
    - Human readable name for the object
  (134,12):
    - Defines a data type
  (135,6):
    - Defines a data type
  (135,12):
    - Defines a data type
  (136,6):
    - Defines a data type
  (136,10):
    - Defines a data type
  (137,8):
    - Scalar range constraining this scalar shape
  (137,15):
    - Scalar range constraining this scalar shape
  (138,8):
    - Maximum items count constraint
  (138,15):
    - Maximum items count constraint
  (139,8):
    - Minimum items count constraint
  (139,14):
    - Minimum items count constraint
  (140,9):
    - Unique items constraint
  (140,19):
    - Unique items constraint
  (141,5):
    - Human readable name for the object
  (141,10):
    - Defines a data type
  (142,6):
    - Defines a data type
  (142,13):
    - Defines a data type
  (143,10):
    - Maximum number of properties in the input node constraint
  (143,20):
    - Maximum number of properties in the input node constraint
  (144,9):
    - Defines a data type
  (144,15):
    - Defines a data type
  (145,6):
    - Defines a data type
  (145,8):
    - Defines a data type
  (146,10):
    - Scalar range constraining this scalar shape
  (146,17):
    - Scalar range constraining this scalar shape
  (147,12):
    - Read only property constraint
  (147,20):
    - Read only property constraint
  (148,9):
    - Information about how to serialize
  (148,12):
    - Information about how to encode into XML a particular data shape
  (149,12):
    - XML name mapping
  (149,16):
    - XML name mapping
  (150,14):
    - XML namespace mapping
  (150,28):
    - XML namespace mapping
  (151,13):
    - XML prefix mapping
  (151,19):
    - XML prefix mapping
  (152,14):
    - XML attribute mapping
  (152,23):
    - XML attribute mapping
  (153,13):
    - XML wrapped mapping flag
  (153,21):
    - XML wrapped mapping flag
  (154,6):
    - Defines a data type
  (154,8):
    - Defines a data type
  (155,10):
    - Scalar range constraining this scalar shape
  (155,17):
    - Scalar range constraining this scalar shape
  (156,14):
    - Additional properties in the input node accepted constraint
  (156,28):
    - Additional properties in the input node accepted constraint
  (157,10):
    - Minimum number of properties in the input node constraint
  (157,19):
    - Minimum number of properties in the input node constraint
  (158,8):
    - Defines a data type
  (158,13):
    - Defines a data type
  (159,8):
    - Defines a data type
  (160,8):
    - Defines a data type
  (161,10):
    - An object name that is used to differentiate between ambiguous types/schemas
  (161,21):
    - An object name that is used to differentiate between ambiguous types/schemas
  (163,5):
    - Contains declarations of reusable Parameter objects
  (163,11):
    - Top level element describing a HTTP API
  (164,6):
    - Piece of data required or returned by an Operation
  (164,12):
    - Defines a data type
  (165,6):
    - Name of a parameter
  (165,12):
    - Name of a parameter
  (166,5):
    - Part of the Request model where the parameter can be encoded (header, path, query param, etc.)
  (166,10):
    - Part of the Request model where the parameter can be encoded (header, path, query param, etc.)
  (167,9):
    - Human readable description of an element
  (167,28):
    - Human readable description of an element
  (168,8):
    - Marks the parameter as required
  (168,16):
    - Marks the parameter as required
  (169,6):
    - Scalar range constraining this scalar shape
  (169,13):
    - Scalar range constraining this scalar shape
  (170,7):
    - Defines semantic validation for a fixed subset of values
  (170,14):
    - Defines semantic validation for a fixed subset of values
  (171,11):
    - Defines a data type
  (171,23):
    - Defines a data type
  (172,12):
    - Defines a data type
  (172,23):
    - Defines a data type
  (173,7):
    - Piece of data required or returned by an Operation
  (173,14):
    - Defines a data type
  (174,6):
    - Name of a parameter
  (174,15):
    - Name of a parameter
  (175,5):
    - Part of the Request model where the parameter can be encoded (header, path, query param, etc.)
  (175,11):
    - Part of the Request model where the parameter can be encoded (header, path, query param, etc.)
  (176,6):
    - Scalar range constraining this scalar shape
  (176,13):
    - Scalar range constraining this scalar shape
  (177,6):
    - Piece of data required or returned by an Operation
  (177,12):
    - Defines a data type
  (178,6):
    - Name of a parameter
  (178,14):
    - Name of a parameter
  (179,5):
    - Part of the Request model where the parameter can be encoded (header, path, query param, etc.)
  (179,10):
    - Part of the Request model where the parameter can be encoded (header, path, query param, etc.)
  (180,6):
    - Scalar range constraining this scalar shape
  (180,13):
    - Scalar range constraining this scalar shape
  (181,8):
    - Marks the parameter as required
  (181,16):
    - Marks the parameter as required
  (182,8):
    - Encoded payload using certain media-type
  (182,16):
    - Defines a data type
  (183,6):
    - Encoded payload using certain media-type
  (183,16):
    - Encoded payload using certain media-type
  (184,5):
    - Defines a data type
  (184,12):
    - Defines a data type
  (185,6):
    - Scalar range constraining this scalar shape
  (185,13):
    - Scalar range constraining this scalar shape
  (186,6):
    - Encoded payload using certain media-type
  (186,12):
    - Encoded payload using certain media-type
  (187,6):
    - Encoded payload using certain media-type
  (187,14):
    - Encoded payload using certain media-type
  (188,5):
    - Encoded payload using certain media-type
  (188,10):
    - Encoded payload using certain media-type
  (189,7):
    - Defines a data type
  (189,11):
    - Defines a data type
  (190,8):
    - Defines a data type
  (190,15):
    - Defines a data type
  (191,11):
    - Defines a data type
  (191,17):
    - Defines a data type
  (192,8):
    - Defines a data type
  (192,10):
    - Defines a data type
  (193,12):
    - Scalar range constraining this scalar shape
  (193,19):
    - Scalar range constraining this scalar shape
  (194,8):
    - Defines a data type
  (194,10):
    - Defines a data type
  (195,12):
    - Defines a data type
  (195,19):
    - Defines a data type
  (196,4):
    - Contains declarations of reusable Response objects
  (196,10):
    - Top level element describing a HTTP API
  (197,7):
    - Response information for an operation
  (197,13):
    - Response information for an operation
  (198,9):
    - Human readable description of an element
  (198,22):
    - Human readable description of an element
  (199,9):
    - Declarations of reusable authentication mechanisms to ensure secured operations
  (199,20):
    - Top level element describing a HTTP API
  (200,5):
    - Authentication and access control mechanism defined in an API
  (200,10):
    - Settings for an API Key security scheme
  (201,6):
    - Type of security scheme
  (201,13):
    - Type of security scheme
  (202,9):
    - Human readable description of an element
  (202,23):
    - Human readable description of an element
  (203,6):
    - Human readable name for the object
  (203,13):
    - Human readable name for the object
  (204,5):
    - Settings for an API Key security scheme
  (204,11):
    - Settings for an API Key security scheme
  (205,8):
    - Authentication and access control mechanism defined in an API
  (205,16):
    - Flow for an OAuth2 security scheme setting
  (206,6):
    - Type of security scheme
  (206,13):
    - Type of security scheme
  (207,12):
    - Flow for an OAuth2 security scheme setting
  (207,39):
    - Flow for an OAuth2 security scheme setting
  (208,6):
    - Flow for an OAuth2 security scheme setting
  (208,14):
    - Flow for an OAuth2 security scheme setting
  (209,7): []
  (209,11): []
  (210,11): []
  (210,31): []
  (211,10): []
  (211,24): []
  (212,8):
    - Authentication and access control mechanism defined in an API
  (212,15):
    - Flow for an OAuth2 security scheme setting
  (213,6):
    - Type of security scheme
  (213,13):
    - Type of security scheme
  (214,6):
    - Flow for an OAuth2 security scheme setting
  (214,14):
    - Flow for an OAuth2 security scheme setting
  (215,8):
    - Flow for an OAuth2 security scheme setting
  (215,31):
    - Flow for an OAuth2 security scheme setting
