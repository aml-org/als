{
  "title": "Person",
  "description": "Declarations of (data) types for use within this API",
  "type": null,
  "children": [
    {
      "title": "name",
      "description": "Type name for top level types. For properties and parameters -- property o parameter name, respectively. For bodies -- media type.",
      "type": "ATTRIBUTETEXT",
      "children": [],
      "valueText": "Person",
      "id": ".Person#name"
    },
    {
      "title": "General",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "allowedTargets",
          "description": "Restrictions on where annotations of this type can be applied. If this property is specified, annotations of this type may only be applied on a property corresponding to one of the target names specified as the value of this property.",
          "type": "MULTIEDITOR",
          "children": [],
          "valueText": "",
          "id": ".Person#allowedTargets"
        },
        {
          "title": "default",
          "description": "Provides default value for a property",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null,
          "id": ".Person#default"
        },
        {
          "title": "isAnnotation",
          "description": "Whether the type represents annotation",
          "type": "CHECKBOX",
          "children": [],
          "valueText": "false",
          "id": ".Person#isAnnotation"
        },
        {
          "title": "facets",
          "description": "Insert facets",
          "type": "DETAILS_ACTION",
          "children": [],
          "id": ".Person#facets#",
          "subType": "INSERT"
        },
        {
          "title": "example",
          "description": "Insert example",
          "type": "DETAILS_ACTION",
          "children": [],
          "id": ".Person#example#",
          "subType": "INSERT"
        },
        {
          "title": "examples",
          "description": "Insert examples",
          "type": "DETAILS_ACTION",
          "children": [],
          "id": ".Person#examples#",
          "subType": "INSERT"
        },
        {
          "title": "xml",
          "description": "Insert xml",
          "type": "DETAILS_ACTION",
          "children": [],
          "id": ".Person#xml#",
          "subType": "INSERT"
        },
        {
          "title": "Delete",
          "description": "",
          "type": "DETAILS_ACTION",
          "children": [],
          "id": ".Person#DELETE_DETAILS_ACTION",
          "subType": "DELETE"
        }
      ],
      "valueText": null,
      "id": "Category#General"
    },
    {
      "title": "Documentation",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "displayName",
          "description": "The displayName attribute specifies the type display name. It is a friendly name used only for  display or documentation purposes. If displayName is not specified, it defaults to the element's key (the name of the property itself).",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": null,
          "id": ".Person#displayName"
        },
        {
          "title": "description",
          "description": "A longer, human-friendly description of the type",
          "type": "MARKDOWN",
          "children": [],
          "valueText": null,
          "id": ".Person#description"
        }
      ],
      "valueText": null,
      "id": "Category#Documentation"
    },
    {
      "title": "Facets",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "enum",
          "description": "(Optional, applicable only for parameters of type string) The enum attribute provides an enumeration of the parameter's valid values. This MUST be an array. If the enum attribute is defined, API clients and servers MUST verify that a parameter's value matches a value in the enum array. If there is no matching value, the clients and servers MUST treat this as an error.",
          "type": "MULTIEDITOR",
          "children": [],
          "valueText": "2, 4, 6, 8",
          "id": ".Person#enum"
        },
        {
          "title": "format",
          "description": "",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": "int",
          "id": ".Person#format"
        },
        {
          "title": "maximum",
          "description": "(Optional, applicable only for parameters of type number or integer) The maximum attribute specifies the parameter's maximum value.",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": 12,
          "id": ".Person#maximum"
        },
        {
          "title": "minimum",
          "description": "(Optional, applicable only for parameters of type number or integer) The minimum attribute specifies the parameter's minimum value.",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": 0,
          "id": ".Person#minimum"
        },
        {
          "title": "multipleOf",
          "description": "A numeric instance is valid against \"multipleOf\" if the result of the division of the instance by this keyword's value is an integer.",
          "type": "ATTRIBUTETEXT",
          "children": [],
          "valueText": 2,
          "id": ".Person#multipleOf"
        }
      ],
      "valueText": null,
      "id": "Category#Facets"
    },
    {
      "title": "type",
      "description": "A base type which the current type extends, or more generally a type expression.",
      "type": "MULTIEDITOR",
      "children": [],
      "valueText": "number",
      "id": ".Person#type"
    },
    {
      "title": "Type",
      "description": "",
      "type": "CATEGORY",
      "children": [
        {
          "title": "Type",
          "description": "A base type which the current type extends, or more generally a type expression.",
          "type": "TYPEDISPLAY",
          "children": [],
          "valueText": "number",
          "id": ".Person#type"
        }
      ],
      "valueText": null,
      "id": "Category#Type"
    }
  ],
  "valueText": null,
  "id": "Category#Person"
}