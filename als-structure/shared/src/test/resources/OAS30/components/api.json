{
  "openapi": "3.0.0",
  "info": {
    "title": "test",
    "version": 1
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    "parameters": {
      "skipParam": {
        "name": "skip",
        "in": "query",
        "description": "number of items to skip",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "description": "max records to return",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Entity not found."
      },
      "IllegalInput": {
        "description": "Illegal input for operation."
      },
      "GeneralError": {
        "description": "General Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GeneralError"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      },
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "http://example.org/api/oauth/dialog",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      }
    },
    "examples": {
      "foo": {
        "summary": "A foo example",
        "value": {
          "foo": "bar"
        }
      },
      "bar": {
        "summary": "A bar example",
        "value": {
          "bar": "baz"
        }
      }
    },
    "requestBodies": {
      "request1": {
        "description": "user to add to the system",
        "content": {
          "application/json": {
            "schema": {
              "type": "string"
            },
            "examples": {
              "user": {
                "summary": "User Example",
                "externalValue": "http://foo.bar/examples/user-example.json"
              }
            }
          }
        }
      },
      "request2": {
        "description": "other request"
      }
    },
    "headers": {
      "header1": {
        "description": "The number of allowed requests in the current period",
        "schema": {
          "type": "integer"
        }
      },
      "header2": {
        "description": "another header",
        "schema": {
          "type": "string"
        }
      }
    },
    "links": {
      "address": {
        "operationId": "getUserAddress",
        "parameters": {
          "userId": "$request.path.id"
        }
      },
      "UserRepositories": {
        "operationRef": "#/paths/~12.0~1repositories~1{username}/get",
        "parameters": {
          "username": "$response.body#/username"
        }
      }
    },
    "callbacks": {
      "myWebhook": {
        "http://notificationServer.com?transactionId={$request.body#/id}&email={$request.body#/email}": {
          "post": {
            "requestBody": {
              "description": "Callback payload",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/SomePayload"
                  }
                }
              }
            },
            "responses": {
              "200": {
                "description": "webhook successfully processed and no retries will be performed"
              }
            }
          }
        }
      }
    }
  }
}