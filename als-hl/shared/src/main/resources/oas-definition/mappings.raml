#%RAML 1.0 Library

annotationTypes:
  amfPath:
  amfClass:

types:
  SpecificationExtension:
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      value:
        type: StringType
        (amfPath):

  WithSpecificationExtensions:
    (amfClass):
    properties:
      specificationExtensions:
        type: SpecificationExtension[]
        (amfPath):

  InfoObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      title:
        type: StringType
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):
      termsOfService:
        type: StringType
        (amfPath):
      version:
        type: StringType
        (amfPath):
      contact:
        type: ContactObject
        (amfPath):
      license:
        type: LicenseObject
        (amfPath):

  LicenseObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      url:
        type: FixedUri
        (amfPath):

  SecurityRequirementObject:
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      value:
        type: StringType[]
        (amfPath):

  TagObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):
      externalDocs:
        type: ExternalDocumentationObject
        (amfPath):

  ContactObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      url:
        type: FixedUri
        (amfPath):
      email:
        type: StringType
        (amfPath):

  SwaggerObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      info:
        type: InfoObject
        (amfPath):
      host:
        type: StringType
        (amfPath):
      basePath:
        type: StringType
        (amfPath):
      schemes:
        type: StringType[]
        (amfPath):
      consumes:
        type: StringType[]
        (amfPath):
      produces:
        type: StringType[]
        (amfPath):
      paths:
        type: PathsObject
        (amfPath):
      definitions:
        type: DefinitionObject[]
        (amfPath):
      parameters:
        type: ParameterDefinitionObject[]
        (amfPath):
      responses:
        type: ResponseDefinitionObject[]
        (amfPath):
      securityDefinitions:
        type: SecurityDefinitionObject[]
        (amfPath):
      security:
        type: SecurityRequirementObject[]
        (amfPath):
      tags:
        type: TagObject[]
        (amfPath):
      externalDocs:
        type: ExternalDocumentationObject
        (amfPath):

  ExternalDocumentationObject:
    (amfClass):
    properties:
      description:
        type: StringType
        (amfPath):
      url:
        type: StringType
        (amfPath):

  Reference:
    type: ValueType
    (amfClass):

  RelativeUriString:
    type: UriTemplate
    (amfClass):

  StatusCodeString:
    type: StringType
    (amfClass):

  TypeInstance:
    (amfClass):
    properties:
      properties:
        type: TypeInstanceProperty[]
        (amfPath):
      isScalar:
        type: BooleanType
        (amfPath):
      value:
        type: AnyType
        (amfPath):

  JSonSchemaString:
    type: SchemaString
    (amfClass):

  FixedUri:
    type: StringType
    (amfClass):

  Referencable:
    (amfClass):

  BooleanType:
    type: ValueType
    (amfClass):

  DeclaresDynamicType:
    type: Referencable
    (amfClass):

  AnyType:
    type: ValueType
    (amfClass):

  UriTemplate:
    type: StringType
    (amfClass):

  FullUriTemplateString:
    type: UriTemplate
    (amfClass):

  XMLSchemaString:
    type: SchemaString
    (amfClass):

  ValueType:
    (amfClass):

  ExampleString:
    type: StringType
    (amfClass):

  NumberType:
    type: ValueType
    (amfClass):

  StringType:
    type: ValueType
    (amfClass):

  SchemaString:
    type: StringType
    (amfClass):

  JSONExample:
    type: ExampleString
    (amfClass):

  MarkdownString:
    type: StringType
    (amfClass):

  XMLExample:
    type: ExampleString
    (amfClass):

  TypeInstanceProperty:
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      value:
        type: TypeInstance
        (amfPath):
      values:
        type: TypeInstance[]
        (amfPath):
      isArray:
        type: BooleanType
        (amfPath):

  SpecPartMetaData:
    (amfClass):

  OAuth2:
    type: SecurityDefinitionObject
    (amfClass):
    properties:
      flow:
        type: StringType
        (amfPath):
      authorizationUrl:
        type: StringType
        (amfPath):
      tokenUrl:
        type: StringType
        (amfPath):
      scopes:
        type: ScopesObject
        (amfPath):

  ParameterDefinitionObject:
    type: ParameterObject
    (amfClass):
    properties:
      key:
        type: StringType
        (amfPath):

  ScopeObject:
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      description:
        type: StringType
        (amfPath):

  CommonParameterDefinitionObject:
    type: [CommonParameterObject, ParameterDefinitionObject]
    (amfClass):

  ResponseDefinitionObject:
    type: ResponseObject
    (amfClass):
    properties:
      key:
        type: StringType
        (amfPath):

  ApiKey:
    type: SecurityDefinitionObject
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      in:
        type: StringType
        (amfPath):

  BodyParameterDefinitionObject:
    type: [BodyParameterObject, ParameterDefinitionObject]
    (amfClass):

  Basic:
    type: SecurityDefinitionObject
    (amfClass):

  SecurityDefinitionObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      type:
        type: StringType
        (amfPath):
      description:
        type: StringType
        (amfPath):

  DefinitionObject:
    type: SchemaObject
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):

  ScopesObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      scopes:
        type: ScopeObject[]
        (amfPath):

  ArrayObject:
    type: ItemsObject
    (amfClass):
    properties:
      items:
        type: ItemsObject
        (amfPath):

  ResponsesObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      default:
        type: ResponseObject
        (amfPath):
      responses:
        type: Response[]
        (amfPath):

  OperationObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      method:
        type: StringType
        (amfPath):
      parameters:
        type: ParameterObject[]
        (amfPath):
      tags:
        type: StringType[]
        (amfPath):
      summary:
        type: StringType
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):
      externalDocs:
        type: ExternalDocumentationObject
        (amfPath):
      operationId:
        type: StringType
        (amfPath):
      consumes:
        type: StringType[]
        (amfPath):
      produces:
        type: StringType[]
        (amfPath):
      responses:
        type: ResponsesObject
        (amfPath):
      schemes:
        type: StringType[]
        (amfPath):
      deprecated:
        type: BooleanType
        (amfPath):
      security:
        type: SecurityRequirementObject[]
        (amfPath):

  HeaderObject:
    type: ItemsObject
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):

  SchemaObject:
    type: ItemsObject
    (amfClass):
    properties:
      $ref:
        type: StringType
        (amfPath):
      title:
        type: StringType
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):
      required:
        type: StringType[]
        (amfPath):
      properties:
        type: DefinitionObject[]
        (amfPath):
      allOf:
        type: SchemaObject[]
        (amfPath):
      items:
        type: SchemaObject
        (amfPath):
      discriminator:
        type: StringType
        (amfPath):
      readOnly:
        type: BooleanType
        (amfPath):
      xml:
        type: XMLObject
        (amfPath):
      externalDocs:
        type: ExternalDocumentationObject[]
        (amfPath):
      example:
        type: AnyType
        (amfPath):

  pointer:
    type: ValueType
    (amfClass):

  Example:
    (amfClass):
    properties:
      mimeType:
        type: StringType
        (amfPath):
      value:
        type: AnyType
        (amfPath):

  CommonParameterObject:
    type: [ParameterObject, ItemsObject]
    (amfClass):
    properties:
      allowEmptyValue:
        type: BooleanType
        (amfPath):
      example:
        type: StringType
        (amfPath):

  PathItemObject:
    (amfClass):
    properties:
      path:
        type: StringType
        (amfPath):
      operations:
        type: OperationObject[]
        (amfPath):
      parameters:
        type: ParameterObject[]
        (amfPath):

  XMLObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      attribute:
        type: BooleanType
        (amfPath):
      wrapped:
        type: BooleanType
        (amfPath):
      name:
        type: StringType
        (amfPath):
      namespace:
        type: StringType
        (amfPath):
      prefix:
        type: StringType
        (amfPath):

  Response:
    type: ResponseObject
    (amfClass):
    properties:
      code:
        type: StringType
        (amfPath):

  ParameterObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      description:
        type: MarkdownString
        (amfPath):
      name:
        type: StringType
        (amfPath):
      in:
        type: StringType
        (amfPath):
      required:
        type: BooleanType
        (amfPath):

  ResponseObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      description:
        type: MarkdownString
        (amfPath):
      schema:
        type: SchemaObject
        (amfPath):
      headers:
        type: HeaderObject[]
        (amfPath):
      examples:
        type: Example[]
        (amfPath):

  PathsObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      paths:
        type: PathItemObject[]
        (amfPath):

  ItemsObject:
    type: WithSpecificationExtensions
    (amfClass):
    properties:
      type:
        type: StringType
        (amfPath):
      format:
        type: StringType
        (amfPath):
      items:
        type: ItemsObject
        (amfPath):
      collectionFormat:
        type: StringType
        (amfPath):
      default:
        type: AnyType
        (amfPath):
      maximum:
        type: NumberType
        (amfPath):
      exclusiveMaximum:
        type: BooleanType
        (amfPath):
      minimum:
        type: NumberType
        (amfPath):
      exclusiveMinimum:
        type: BooleanType
        (amfPath):
      maxLength:
        type: NumberType
        (amfPath):
      minLength:
        type: NumberType
        (amfPath):
      pattern:
        type: StringType
        (amfPath):
      maxItems:
        type: NumberType
        (amfPath):
      minItems:
        type: NumberType
        (amfPath):
      uniqueItems:
        type: BooleanType
        (amfPath):
      enum:
        type: StringType[]
        (amfPath):
      multipleOf:
        type: NumberType
        (amfPath):

  BodyParameterObject:
    type: ParameterObject
    (amfClass):
    properties:
      schema:
        type: SchemaObject
        (amfPath):
      in:
        type: StringType
        (amfPath):
      type:
        type: StringType
        (amfPath):
