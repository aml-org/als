#%RAML 1.0 Library

annotationTypes:
  amfPath:
  amfClass:

types:
  Scope:
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      description:
        type: StringType
        (amfPath):

  OAuth1SecuritySchemeSettings:
    type: SecuritySchemeSettings
    (amfClass):
    properties:
      requestTokenUri:
        type: FixedUriString
        (amfPath):
      authorizationUri:
        type: FixedUriString
        (amfPath):
      tokenCredentialsUri:
        type: FixedUriString
        (amfPath):
      signatures:
        type: StringType[]
        (amfPath):

  OAuth2SecuritySchemeSettings:
    type: SecuritySchemeSettings
    (amfClass):
    properties:
      accessTokenUri:
        type: FixedUriString
        (amfPath):
      authorizationUri:
        type: FixedUriString
        (amfPath):
      authorizationGrants:
        type: StringType[]
        (amfPath):
      scopes:
        type: Scope[]
        (amfPath):

  BasicSecurityScheme:
    type: AbstractSecurityScheme
    (amfClass):

  DigestSecurityScheme:
    type: AbstractSecurityScheme
    (amfClass):

  SecuritySchemePart:
    type: Operation
    (amfClass):

  OAuth2SecurityScheme:
    type: AbstractSecurityScheme
    (amfClass):
    properties:
      settings:
        type: OAuth2SecuritySchemeSettings
        (amfPath):

  CustomSecurityScheme:
    type: AbstractSecurityScheme
    (amfClass):

  SecuritySchemeSettings:
    type: Annotable
    (amfClass):

  AbstractSecurityScheme:
    type: Annotable
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      type:
        type: StringType
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):
      describedBy:
        type: SecuritySchemePart
        (amfPath):
      displayName:
        type: StringType
        (amfPath):
      settings:
        type: SecuritySchemeSettings
        (amfPath):

  OAuth1SecurityScheme:
    type: AbstractSecurityScheme
    (amfClass):
    properties:
      settings:
        type: OAuth1SecuritySchemeSettings
        (amfPath):

  PassThroughSecurityScheme:
    type: AbstractSecurityScheme
    (amfClass):
    properties:
      settings:
        type: SecuritySchemeSettings
        (amfPath):

  SecuritySchemeRef:
    type: Reference
    (amfClass):
    properties:
      securityScheme:
        type: AbstractSecurityScheme
        (amfPath):
      settings:
        type: SecuritySchemeSettings
        (amfPath):

  Trait:
    type: MethodBase
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      usage:
        type: StringType
        (amfPath):
      parameters:
        type: StringType[]
        (amfPath):

  Method:
    type: MethodBase
    (amfClass):
    properties:
      method:
        type: StringType
        (amfPath):

  Operation:
    type: Annotable
    (amfClass):
    properties:
      queryParameters:
        type: TypeDeclaration[]
        (amfPath):
      headers:
        type: TypeDeclaration[]
        (amfPath):
      queryString:
        type: TypeDeclaration
        (amfPath):
      responses:
        type: Response[]
        (amfPath):

  MethodBase:
    type: Operation
    (amfClass):
    properties:
      body:
        type: TypeDeclaration[]
        (amfPath):
      protocols:
        type: StringType[]
        (amfPath):
      is:
        type: TraitRef[]
        (amfPath):
      securedBy:
        type: SecuritySchemeRef[]
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):
      displayName:
        type: StringType
        (amfPath):

  TemplateRef:
    type: Reference
    (amfClass):
    properties:
      parameters:
        type: TemplateParameter[]
        (amfPath):

  TraitRef:
    type: TemplateRef
    (amfClass):
    properties:
      trait:
        type: Trait
        (amfPath):

  TemplateParameter:
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      value:
        type: AnyType
        (amfPath):

  TypeExtension:
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      value:
        type: AnyType
        (amfPath):

  XMLFacetInfo:
    type: Annotable
    (amfClass):
    properties:
      attribute:
        type: BooleanType
        (amfPath):
      wrapped:
        type: BooleanType
        (amfPath):
      name:
        type: StringType
        (amfPath):
      namespace:
        type: StringType
        (amfPath):
      prefix:
        type: StringType
        (amfPath):

  ExampleSpec:
    type: Annotable
    (amfClass):
    properties:
      value:
        type: AnyType
        (amfPath):
      strict:
        type: BooleanType
        (amfPath):
      name:
        type: StringType
        (amfPath):
      displayName:
        type: StringType
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):

  Reference:
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):

  FileType:
    type: ValueType
    (amfClass):

  RelativeUriString:
    type: UriTemplate
    (amfClass):

  StatusCodeString:
    type: StringType
    (amfClass):

  DateOnlyType:
    type: ValueType
    (amfClass):

  DateTimeOnlyType:
    type: ValueType
    (amfClass):

  BooleanType:
    type: ValueType
    (amfClass):

  AnyType:
    type: ValueType
    (amfClass):

  UriTemplate:
    type: StringType
    (amfClass):

  FullUriTemplateString:
    type: UriTemplate
    (amfClass):

  NullType:
    type: ValueType
    (amfClass):

  ValueType:
    type: Annotable
    (amfClass):

  TimeOnlyType:
    type: ValueType
    (amfClass):

  DateTimeType:
    type: ValueType
    (amfClass):

  NumberType:
    type: ValueType
    (amfClass):

  FixedUriString:
    type: StringType
    (amfClass):

  StringType:
    type: ValueType
    (amfClass):

  SchemaString:
    type: StringType
    (amfClass):

  IntegerType:
    type: ValueType
    (amfClass):

  MarkdownString:
    type: StringType
    (amfClass):

  ContentType:
    type: StringType
    (amfClass):

  Annotable:
    (amfClass):
    properties:
      annotations:
        type: AnnotationRef[]
        (amfPath):

  Response:
    type: Annotable
    (amfClass):
    properties:
      code:
        type: StatusCodeString
        (amfPath):
      headers:
        type: TypeDeclaration[]
        (amfPath):
      body:
        type: TypeDeclaration[]
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):

  MimeType:
    type: StringType
    (amfClass):

  SpecPartMetaData:
    (amfClass):

  AnnotationRef:
    type: Reference
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      value:
        type: AnyType
        (amfPath):
      annotation:
        type: TypeDeclaration
        (amfPath):

  AnnotationTarget:
    type: ValueType
    (amfClass):

  ResourceBase:
    type: Annotable
    (amfClass):
    properties:
      displayName:
        type: StringType
        (amfPath):
      methods:
        type: Method[]
        (amfPath):
      is:
        type: TraitRef[]
        (amfPath):
      type:
        type: ResourceTypeRef
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):
      securedBy:
        type: SecuritySchemeRef[]
        (amfPath):
      uriParameters:
        type: TypeDeclaration[]
        (amfPath):

  ResourceTypeRef:
    type: TemplateRef
    (amfClass):
    properties:
      resourceType:
        type: ResourceType
        (amfPath):

  Resource:
    type: ResourceBase
    (amfClass):
    properties:
      relativeUri:
        type: RelativeUriString
        (amfPath):
      resources:
        type: Resource[]
        (amfPath):

  ResourceType:
    type: ResourceBase
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      usage:
        type: StringType
        (amfPath):
      parameters:
        type: StringType[]
        (amfPath):

  Overlay:
    type: Api
    (amfClass):
    properties:
      usage:
        type: StringType
        (amfPath):
      extends:
        type: StringType
        (amfPath):
      title:
        type: StringType
        (amfPath):

  Extension:
    type: Api
    (amfClass):
    properties:
      usage:
        type: StringType
        (amfPath):
      extends:
        type: StringType
        (amfPath):
      title:
        type: StringType
        (amfPath):

  Library:
    type: LibraryBase
    (amfClass):
    properties:
      usage:
        type: StringType
        (amfPath):
      name:
        type: StringType
        (amfPath):

  UsesDeclaration:
    type: Annotable
    (amfClass):
    properties:
      key:
        type: StringType
        (amfPath):
      value:
        type: StringType
        (amfPath):

  FragmentDeclaration:
    type: Annotable
    (amfClass):
    properties:
      uses:
        type: UsesDeclaration[]
        (amfPath):

  Api:
    type: LibraryBase
    (amfClass):
    properties:
      title:
        type: StringType
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):
      version:
        type: StringType
        (amfPath):
      baseUri:
        type: FullUriTemplateString
        (amfPath):
      baseUriParameters:
        type: TypeDeclaration[]
        (amfPath):
      protocols:
        type: StringType[]
        (amfPath):
      mediaType:
        type: MimeType[]
        (amfPath):
      securedBy:
        type: SecuritySchemeRef[]
        (amfPath):
      resources:
        type: Resource[]
        (amfPath):
      documentation:
        type: DocumentationItem[]
        (amfPath):

  LibraryBase:
    type: FragmentDeclaration
    (amfClass):
    properties:
      schemas:
        type: TypeDeclaration[]
        (amfPath):
      types:
        type: TypeDeclaration[]
        (amfPath):
      traits:
        type: Trait[]
        (amfPath):
      resourceTypes:
        type: ResourceType[]
        (amfPath):
      annotationTypes:
        type: TypeDeclaration[]
        (amfPath):
      securitySchemes:
        type: AbstractSecurityScheme[]
        (amfPath):

  DocumentationItem:
    type: Annotable
    (amfClass):
    properties:
      title:
        type: StringType
        (amfPath):
      content:
        type: MarkdownString
        (amfPath):

  StringTypeDeclaration:
    type: TypeDeclaration
    (amfClass):
    properties:
      pattern:
        type: StringType
        (amfPath):
      minLength:
        type: NumberType
        (amfPath):
      maxLength:
        type: NumberType
        (amfPath):
      enum:
        type: StringType[]
        (amfPath):

  DateOnlyTypeDeclaration:
    type: TypeDeclaration
    (amfClass):

  ArrayTypeDeclaration:
    type: TypeDeclaration
    (amfClass):
    properties:
      uniqueItems:
        type: BooleanType
        (amfPath):
      items:
        type: StringType
        (amfPath):
      minItems:
        type: NumberType
        (amfPath):
      maxItems:
        type: NumberType
        (amfPath):

  DateTimeOnlyTypeDeclaration:
    type: TypeDeclaration
    (amfClass):

  UnionTypeDeclaration:
    type: TypeDeclaration
    (amfClass):

  DateTimeTypeDeclaration:
    type: TypeDeclaration
    (amfClass):
    properties:
      format:
        type: StringType
        (amfPath):

  ObjectTypeDeclaration:
    type: TypeDeclaration
    (amfClass):
    properties:
      properties:
        type: TypeDeclaration[]
        (amfPath):
      minProperties:
        type: NumberType
        (amfPath):
      maxProperties:
        type: NumberType
        (amfPath):
      additionalProperties:
        type: BooleanType
        (amfPath):
      discriminator:
        type: StringType
        (amfPath):
      discriminatorValue:
        type: StringType
        (amfPath):
      enum:
        type: AnyType[]
        (amfPath):

  NumberTypeDeclaration:
    type: TypeDeclaration
    (amfClass):
    properties:
      minimum:
        type: NumberType
        (amfPath):
      maximum:
        type: NumberType
        (amfPath):
      enum:
        type: NumberType[]
        (amfPath):
      format:
        type: StringType
        (amfPath):
      multipleOf:
        type: NumberType
        (amfPath):

  TimeOnlyTypeDeclaration:
    type: TypeDeclaration
    (amfClass):

  TypeDeclaration:
    type: Annotable
    (amfClass):
    properties:
      name:
        type: StringType
        (amfPath):
      displayName:
        type: StringType
        (amfPath):
      facets:
        type: TypeDeclaration[]
        (amfPath):
      fixedFacets:
        type: TypeExtension[]
        (amfPath):
      schema:
        type: StringType
        (amfPath):
      type:
        type: AnyType
        (amfPath):
      default:
        type: AnyType
        (amfPath):
      example:
        type: ExampleSpec
        (amfPath):
      examples:
        type: ExampleSpec[]
        (amfPath):
      required:
        type: BooleanType
        (amfPath):
      description:
        type: MarkdownString
        (amfPath):
      xml:
        type: XMLFacetInfo
        (amfPath):
      allowedTargets:
        type: AnnotationTarget[]
        (amfPath):

  IntegerTypeDeclaration:
    type: NumberTypeDeclaration
    (amfClass):
    properties:
      format:
        type: StringType
        (amfPath):

  BooleanTypeDeclaration:
    type: TypeDeclaration
    (amfClass):
    properties:
      enum:
        type: BooleanType[]
        (amfPath):

  NilTypeDeclaration:
    type: TypeDeclaration
    (amfClass):

  FileTypeDeclaration:
    type: TypeDeclaration
    (amfClass):
    properties:
      fileTypes:
        type: ContentType[]
        (amfPath):
      minLength:
        type: NumberType
        (amfPath):
      maxLength:
        type: NumberType
        (amfPath):
